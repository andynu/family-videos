%p#notice= notice

%p
  %b Title:
  = @video.title

  = video_tag([@video.video.url,@video.video.ogv.url].compact, controls: true)

  #ogg_conversion_progress
  #ogg_conversion_status

  :coffee
    $ ->
      id = #{@video.id}
      status_url = "/videos/#{@video.id}/conversion_status"
      status = undefined
      status_pid = undefined
      check_status = () ->
        $.ajax
          async: false,
          url: status_url,
          success: (data) ->
            console.log(data)
            status = data['status']
            if status == 'converting'
              pos = data['ffmpeg']['position']
              dur = data['ffmpeg']['duration']
              pct = ((pos/dur)*100)
              progress = "" + pos + " / " + dur + " (" + pct + ")"
              $('#ogg_conversion_progress').html(progress)
              $('#ogg_conversion_status').html(status)
              status_pid = setTimeout(check_status, 200)

            if status == 'complete'
              clearTimeout(check_status)
      check_status()
      

            


  /= render partial: 'video_player'
  /:coffee
  /   $ ->
  /    video_url = "#{@video.video.url}"
  /    supplied_formates = ""
  /    setMedia_data =
  /      title: "#{@video.title}",
  /      #poster: "http://www.jplayer.org/video/poster/Big_Buck_Bunny_Trailer_480x270.png"
  /    if /ogv$/.test(video_url)
  /      setMedia_data['ogv'] = video_url
  /      supplied_formates = "ogv"
  /    else
  /      setMedia_data['m4v'] = video_url
  /      supplied_formates = "m4v"

  /    $("#jquery_jplayer_1").jPlayer
  /      ready: -> $(this).jPlayer "setMedia", setMedia_data
  /      cssSelectorAncestor: "#jp_container_1",
  /      swfPath: "/js",
  /      #supplied: "m4v, ogv",
  /      supplied: supplied_formates,
  /      useStateClassSkin: true,
  /      autoBlur: false,
  /      smoothPlayBar: true,
  /      keyEnabled: true,
  /      remainingDuration: true,
  /      toggleDuration: true


= link_to 'Edit', edit_video_path(@video)
\|
= link_to 'Back', videos_path
